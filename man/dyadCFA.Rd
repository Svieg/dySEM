% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dyadCFA.R
\name{dyadCFA}
\alias{dyadCFA}
\title{A Function That Writes, Saves, and Exports Syntax for
Fitting Latent Dyadic Measurement and Invariance Models}
\usage{
dyadCFA(dvn, lvxname, lvyname, lv = "X", model = "configural")
}
\arguments{
\item{dvn}{input object from dyadVarNames()}

\item{lvxname}{input character to (arbitrarily) name LV X in lavaan syntax}

\item{lvyname}{input character to (arbitrarily) name LV Y in lavaan syntax}

\item{lv}{input character to indicate which LV is modeled (default is "X")}

\item{model}{input character used to specify which level of invariance is
modeled. Defaults to "configural"}
}
\value{
character object of lavaan script that can be passed immediately to
lavaan functions
}
\description{
This function takes the outputted object from dyadVarNames()
and automatically writes, returns, and exports (.txt) lavaan() syntax
for specifying dyadic configural, loading, and intercept invariant
measurement models for either a specified X or Y factor.
}
\examples{
dvn = dyadVarNames(dat, xvar="X", yvar="Y", sep = ".",distinguish1 = "1", distinguish2 = "2")
con.config.script = dyadCFA(dvn, lvxname = "Conflict", lv="X", model = "configural")
con.loading.script = dyadCFA(dvn, lvxname = "Conflict", lv="X", model = "loading")
con.intercept.script = dyadCFA(dvn, lvxname = "Conflict", lv="X", model = "intercept")
}
\seealso{
\code{\link{dyadVarNames}} which this function relies on
}
